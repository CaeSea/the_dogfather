!function(e){e.cookie=function(i,o,t){if(arguments.length>1&&(!/Object/.test(Object.prototype.toString.call(o))||null==o)){if(t=e.extend({},t),null==o&&(t.expires=-1),"number"==typeof t.expires){var a=t.expires,n=t.expires=new Date;n.setDate(n.getDate()+a)}return o=String(o),document.cookie=[encodeURIComponent(i),"=",t.raw?o:encodeURIComponent(o),t.expires?"; expires="+t.expires.toUTCString():"",t.path?"; path="+t.path:"",t.domain?"; domain="+t.domain:"",t.secure?"; secure":""].join("")}for(var s,r=(t=o||{}).raw?function(e){return e}:decodeURIComponent,l=document.cookie.split("; "),c=0;s=l[c]&&l[c].split("=");c++)if(r(s[0])===i)return r(s[1]||"");return null},e.fn.cookieBar=function(i){var o=e.extend({closeButton:"none",hideOnClose:!0,secure:!1,path:"/",domain:""},i);return this.each(function(){var i=e(this);e(".ui-widget").hide(),i.hide(),"none"==o.closeButton&&(i.append('<a class="cookiebar-close">Continue</a>'),e.extend(o,{closeButton:".cookiebar-close"})),"hide"!=e.cookie("cookiebar")&&(e(".ui-widget").fadeIn(1e3),i.fadeIn(1e3)),i.find(o.closeButton).click(function(){return o.hideOnClose&&i.hide(),e.cookie("cookiebar","hide",{path:o.path,secure:o.secure,domain:o.domain,expires:30}),i.trigger("cookieBar-close"),!1})})},e.cookieBar=function(i){e("body").prepend('<div class="ui-widget"><div style="display: none;" class="cookie-message ui-widget-header blue"><p>By using this website you agree to our use of cookies. For more information <a class="cookie-link" href="/terms.html">click here.</a></p></div></div>'),e(".cookie-message").cookieBar(i)}}(jQuery),$(document).ready(function(){$(".back-to-top").hide(),$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var i=this.hash;$("html, body").animate({scrollTop:$(i).offset().top},800,function(){window.location.hash=i})}}),$(window).scroll(function(){$(this).scrollTop()>150?$(".back-to-top").fadeIn():$(".back-to-top").fadeOut()});var e=null;$(window).scroll(function(){null!==e&&clearTimeout(e),e=setTimeout(function(){$(".back-to-top").fadeOut()},2e3)})});const ContactFormValidation=function(){const e=["#name","#email","#tel","#message"];function i(e){const i=e.target;if("email"===i.id){if(!$(i).val()&&$(i).hasClass("dirty"))return $(i).addClass("invalid"),void $(".error-message").text("Please enter a value for all required fields");if(!t($("#email").val())&&$("#email").val())return $(i).addClass("invalid"),void $(".error-message").text("Please enter a valid email address");t($("#email").val()&&$(i).val())&&$(i).hasClass("invalid")&&$(i).removeClass("invalid")}else!$(i).val()&&$(i).hasClass("dirty")?($(i).addClass("invalid"),$(".error-message").text("Please enter a value for all required fields")):$(i).hasClass("invalid")&&$(i).removeClass("invalid")}function o(i){const o=i.target;$(e[0]).val()&&$(e[1]).val()&&$(e[2]).val()&&$(e[3]).val()&&t($("#email").val())?$("#submit").attr("disabled",!1):$("#submit").attr("disabled",!0),$(o).hasClass("pristine")&&$(o).removeClass("pristine").addClass("dirty"),$(o).hasClass("invalid")&&$(o).val()&&$(o).removeClass("invalid"),$(".invalid").length||$(".error-message").text("")}function t(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())}function a(e){const i=window.event?e.keyCode:e.which;(i<48||i>57)&&(0==i||8==i||13==i||e.ctrlKey||e.preventDefault())}return{init:function(){for(let t of e)$(t).on("keyup",o),$(t).on("focusout",i);$("#tel").on("keydown",a)}}}();$(document).ready(function(){ContactFormValidation.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
