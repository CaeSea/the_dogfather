$(document).ready(function(){navigator.userAgent.match(/SamsungBrowser/i)&&screen.width<400&&($("#gal1").css("display","none"),$("#gal2").css("display","none"),$(".landing-strip-title-wrapper").css("margin-top","10px"))}),function(e){e.cookie=function(i,t,o){if(arguments.length>1&&(!/Object/.test(Object.prototype.toString.call(t))||null==t)){if(o=e.extend({},o),null==t&&(o.expires=-1),"number"==typeof o.expires){var a=o.expires,n=o.expires=new Date;n.setDate(n.getDate()+a)}return t=String(t),document.cookie=[encodeURIComponent(i),"=",o.raw?t:encodeURIComponent(t),o.expires?"; expires="+o.expires.toUTCString():"",o.path?"; path="+o.path:"",o.domain?"; domain="+o.domain:"",o.secure?"; secure":""].join("")}for(var s,r=(o=t||{}).raw?function(e){return e}:decodeURIComponent,l=document.cookie.split("; "),c=0;s=l[c]&&l[c].split("=");c++)if(r(s[0])===i)return r(s[1]||"");return null},e.fn.cookieBar=function(i){var t=e.extend({closeButton:"none",hideOnClose:!0,secure:!1,path:"/",domain:""},i);return this.each(function(){var i=e(this);e(".ui-widget").hide(),i.hide(),"none"==t.closeButton&&(i.append('<a class="cookiebar-close">Continue</a>'),e.extend(t,{closeButton:".cookiebar-close"})),"hide"!=e.cookie("cookiebar")&&(e(".ui-widget").fadeIn(1e3),i.fadeIn(1e3)),i.find(t.closeButton).click(function(){return t.hideOnClose&&i.hide(),e.cookie("cookiebar","hide",{path:t.path,secure:t.secure,domain:t.domain,expires:30}),i.trigger("cookieBar-close"),!1})})},e.cookieBar=function(i){e("body").prepend('<div class="ui-widget"><div style="display: none;" class="cookie-message ui-widget-header blue"><p>By using this website you agree to our use of cookies. For more information <a class="cookie-link" href="/terms.html">click here.</a></p></div></div>'),e(".cookie-message").cookieBar(i)}}(jQuery),$(document).ready(function(){$(".back-to-top").hide(),$("a").on("click",function(e){if(""!==this.hash){e.preventDefault();var i=this.hash;$("html, body").animate({scrollTop:$(i).offset().top},800,function(){window.location.hash=i})}}),$(window).scroll(function(){$(this).scrollTop()>150?$(".back-to-top").fadeIn():$(".back-to-top").fadeOut()});var e=null;$(window).scroll(function(){null!==e&&clearTimeout(e),e=setTimeout(function(){$(".back-to-top").fadeOut()},2e3)})});const ContactFormValidation=function(){const e=["#name","#email","#tel","#message"];function i(e){const i=e.target;if("email"===i.id){if(!$(i).val()&&$(i).hasClass("dirty"))return $(i).addClass("invalid"),void $(".error-message").text("Please enter a value for all required fields");if(!o($("#email").val())&&$("#email").val())return $(i).addClass("invalid"),void $(".error-message").text("Please enter a valid email address");o($("#email").val()&&$(i).val())&&$(i).hasClass("invalid")&&$(i).removeClass("invalid")}else!$(i).val()&&$(i).hasClass("dirty")?($(i).addClass("invalid"),$(".error-message").text("Please enter a value for all required fields")):$(i).hasClass("invalid")&&$(i).removeClass("invalid")}function t(i){const t=i.target;$(e[0]).val()&&$(e[1]).val()&&$(e[2]).val()&&$(e[3]).val()&&o($("#email").val())?$("#submit").attr("disabled",!1):$("#submit").attr("disabled",!0),$(t).hasClass("pristine")&&$(t).removeClass("pristine").addClass("dirty"),$(t).hasClass("invalid")&&$(t).val()&&$(t).removeClass("invalid"),$(".invalid").length||$(".error-message").text("")}function o(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(e).toLowerCase())}function a(e){const i=window.event?e.keyCode:e.which;(i<48||i>57)&&(0==i||8==i||13==i||e.ctrlKey||e.preventDefault())}return{init:function(){for(let o of e)$(o).on("keyup",t),$(o).on("focusout",i);$("#tel").on("keydown",a)}}}();$(document).ready(function(){ContactFormValidation.init()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
